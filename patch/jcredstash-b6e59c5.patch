From cc7a069b277b9c7c28c483761a0ffc1b2a8e084f Mon Sep 17 00:00:00 2001
From: Clinton Campbell <clinton@quirktree.com>
Date: Thu, 27 Jul 2017 10:27:56 -0700
Subject: [PATCH 1/3] Modified AWS client setup to use builder classes rather
 than deprecated constructors. Updated SDK and Bouncycastle dependency
 versions.

---
 pom.xml                                      |  4 ++--
 src/main/java/com/jessecoyle/JCredStash.java | 16 ++++++++++++----
 2 files changed, 14 insertions(+), 6 deletions(-)

diff --git a/pom.xml b/pom.xml
index 69efb65..9ffe4d7 100644
--- a/pom.xml
+++ b/pom.xml
@@ -28,7 +28,7 @@
     </scm>
 
     <properties>
-        <aws.version>1.11.18</aws.version>
+        <aws.version>1.11.169</aws.version>
     </properties>
 
     <dependencies>
@@ -45,7 +45,7 @@
         <dependency>
             <groupId>org.bouncycastle</groupId>
             <artifactId>bcprov-jdk15on</artifactId>
-            <version>1.54</version>
+            <version>1.57</version>
         </dependency>
         <dependency>
             <groupId>junit</groupId>
diff --git a/src/main/java/com/jessecoyle/JCredStash.java b/src/main/java/com/jessecoyle/JCredStash.java
index 38cfe84..cb86f88 100644
--- a/src/main/java/com/jessecoyle/JCredStash.java
+++ b/src/main/java/com/jessecoyle/JCredStash.java
@@ -3,9 +3,11 @@ package com.jessecoyle;
 import com.amazonaws.auth.AWSCredentialsProvider;
 import com.amazonaws.services.dynamodbv2.AmazonDynamoDB;
 import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient;
+import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder;
 import com.amazonaws.services.dynamodbv2.model.*;
 import com.amazonaws.services.kms.AWSKMS;
 import com.amazonaws.services.kms.AWSKMSClient;
+import com.amazonaws.services.kms.AWSKMSClientBuilder;
 import com.amazonaws.services.kms.model.DecryptRequest;
 import com.amazonaws.services.kms.model.DecryptResult;
 import com.amazonaws.services.kms.model.GenerateDataKeyRequest;
@@ -25,14 +27,20 @@ public class JCredStash {
     protected CredStashCrypto cryptoImpl;
 
     public JCredStash() {
-        this.amazonDynamoDBClient = new AmazonDynamoDBClient();
-        this.awskmsClient = new AWSKMSClient();
+        this.amazonDynamoDBClient = AmazonDynamoDBClientBuilder.defaultClient();
+        this.awskmsClient = AWSKMSClientBuilder.defaultClient();
         this.cryptoImpl = new CredStashBouncyCastleCrypto();
     }
 
     public JCredStash(AWSCredentialsProvider awsCredentialsProvider) {
-        this.amazonDynamoDBClient = new AmazonDynamoDBClient(awsCredentialsProvider);
-        this.awskmsClient = new AWSKMSClient(awsCredentialsProvider);
+        this.amazonDynamoDBClient = AmazonDynamoDBClientBuilder
+          .standard()
+          .withCredentials(awsCredentialsProvider)
+          .build();
+        this.awskmsClient = AWSKMSClientBuilder
+          .standard()
+          .withCredentials(awsCredentialsProvider)
+          .build();
         this.cryptoImpl = new CredStashBouncyCastleCrypto();
     }
 
-- 
2.13.2


From 1f0cb143814e6e839545debe2318d93d60f49476 Mon Sep 17 00:00:00 2001
From: Clinton Campbell <clinton@quirktree.com>
Date: Thu, 27 Jul 2017 10:29:13 -0700
Subject: [PATCH 2/3] Resolved issue with null argument exception in KMS
 operation without encryption context

---
 src/main/java/com/jessecoyle/JCredStash.java | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/src/main/java/com/jessecoyle/JCredStash.java b/src/main/java/com/jessecoyle/JCredStash.java
index cb86f88..bb9ee02 100644
--- a/src/main/java/com/jessecoyle/JCredStash.java
+++ b/src/main/java/com/jessecoyle/JCredStash.java
@@ -240,7 +240,13 @@ public class JCredStash {
     protected ByteBuffer decryptKeyWithKMS(byte[] encryptedKeyBytes, Map<String, String> context) {
         ByteBuffer blob = ByteBuffer.wrap(encryptedKeyBytes);
 
-        DecryptResult decryptResult = awskmsClient.decrypt(new DecryptRequest().withCiphertextBlob(blob).withEncryptionContext(context));
+        DecryptRequest decryptRequest = new DecryptRequest().withCiphertextBlob(blob);
+
+        if(context != null) {
+          decryptRequest.withEncryptionContext(context);
+        }
+
+        DecryptResult decryptResult = awskmsClient.decrypt(decryptRequest);
 
         return decryptResult.getPlaintext();
     }
@@ -340,7 +346,13 @@ public class JCredStash {
             newVersion = padVersion(1);
         }
 
-        GenerateDataKeyResult generateDataKeyResult = awskmsClient.generateDataKey(new GenerateDataKeyRequest().withKeyId(kmsKeyId).withEncryptionContext(context).withNumberOfBytes(64));
+        GenerateDataKeyRequest dataKeyRequest = new GenerateDataKeyRequest().withKeyId(kmsKeyId).withNumberOfBytes(64);
+
+        if(context != null) {
+          dataKeyRequest.withEncryptionContext(context);
+        }
+
+        GenerateDataKeyResult generateDataKeyResult = awskmsClient.generateDataKey(dataKeyRequest);
         ByteBuffer plainTextKey = generateDataKeyResult.getPlaintext();
         ByteBuffer cipherTextBlob = generateDataKeyResult.getCiphertextBlob();
 
-- 
2.13.2


From be70ab7daafe8de660f112016caba9431eec6dc1 Mon Sep 17 00:00:00 2001
From: Clinton Campbell <clinton@quirktree.com>
Date: Thu, 27 Jul 2017 10:29:30 -0700
Subject: [PATCH 3/3] Resolved issue with HMAC encoding/decoding

---
 src/main/java/com/jessecoyle/JCredStash.java | 32 +++++++++++++++++++++++-----
 1 file changed, 27 insertions(+), 5 deletions(-)

diff --git a/src/main/java/com/jessecoyle/JCredStash.java b/src/main/java/com/jessecoyle/JCredStash.java
index bb9ee02..d227324 100644
--- a/src/main/java/com/jessecoyle/JCredStash.java
+++ b/src/main/java/com/jessecoyle/JCredStash.java
@@ -15,6 +15,7 @@ import com.amazonaws.services.kms.model.GenerateDataKeyResult;
 import org.apache.commons.codec.DecoderException;
 import org.apache.commons.codec.binary.Hex;
 
+import java.io.UnsupportedEncodingException;
 import java.nio.ByteBuffer;
 import java.util.*;
 
@@ -62,11 +63,28 @@ public class JCredStash {
         }
 
         protected static byte[] hexAttributeValueToBytes(AttributeValue value) {
-            try {
-                return Hex.decodeHex(value.getS().toCharArray());
-            } catch (DecoderException e) {
-                throw new RuntimeException(e);
+
+          ByteBuffer b = value.getB();
+          byte[] attr;
+
+          try {
+            if(b.remaining() > 0) {
+              // support for current versions of credstash
+              attr = value.getB().array();
+            } else {
+              // support for backwards compatibility
+              attr = value.getS().getBytes("UTF-8");
             }
+          } catch (UnsupportedEncodingException e) {
+            throw new RuntimeException(e);
+          }
+
+          Hex hexDecoder = new Hex("UTF-8");
+          try {
+            return hexDecoder.decode(attr);
+          } catch (DecoderException e) {
+              throw new RuntimeException(e);
+          }
         }
 
         public StoredSecret(Map<String, AttributeValue> item) {
@@ -373,7 +391,11 @@ public class JCredStash {
         item.put("version", new AttributeValue(newVersion));
         item.put("key", new AttributeValue(new String(Base64.getEncoder().encode(encryptedKeyBytes))));
         item.put("contents", new AttributeValue(new String(Base64.getEncoder().encode(contents))));
-        item.put("hmac", new AttributeValue(new String(Hex.encodeHex(hmac))));
+        try {
+          item.put("hmac", new AttributeValue().withB(ByteBuffer.wrap(Hex.encodeHexString(hmac).getBytes("UTF-8"))));
+        } catch (UnsupportedEncodingException e) {
+          throw new RuntimeException(e);
+        }
 
         Map<String, String> expressionAttributes = new HashMap<>();
         expressionAttributes.put("#N", "name");
-- 
2.13.2

